import nltk
from nltk import PCFG
from nltk import ViterbiParser

# Definir una gramática probabilística lexicalizada simple
gramatica = PCFG.fromstring("""
    S -> NP VP [1.0]
    NP -> Det N [0.5] | Det N PP [0.3] | 'John' [0.2]
    VP -> V NP [0.7] | VP PP [0.3]
    PP -> P NP [1.0]
    Det -> 'the' [0.6] | 'my' [0.4]
    N -> 'man' [0.5] | 'telescope' [0.5]
    V -> 'saw' [0.4] | 'ate' [0.6]
    P -> 'with' [1.0]
""")

# Crear un parser Viterbi con la gramática
parser = ViterbiParser(gramatica)

# Frase de entrada
frase = "the man saw the telescope with my telescope"

# Tokenizar la frase
palabras = frase.split()

# Analizar la frase
for arbol in parser.parse(palabras):
    arbol.pretty_print()
